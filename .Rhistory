fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
fviz_nbclust(data.transform, kmeans, method = 'wss')
# Silhouette Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'silhouette')
library(factoextra)
library(NbClust)
library(NbClust)
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
fviz_nbclust(data.transform, kmeans, method = 'wss')
# Silhouette Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'silhouette')
fviz_nbclust(data.transform, kmeans, method = 'silhouette')
library(NbClust)
library(factoextra)
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
fviz_nbclust(data.transform, kmeans, method = 'wss')
#clustering
#using Nb clust method
clusters.nb <- NbClust(winedat = data.clean[1:11], method = "kmeans")
#Reffered to
#https://universeofdatascience.com/how-to-remove-outliers-from-data-in-r/
remove_outliers <- function(winecol) {
quartile <- quantile(winedat.clean[,winecol], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,winecol])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,winecol] > lower_range
& data.clean[,winecol] < upper_range))
}
View(data.clean)
View(winedat)
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
# Remove outliers
# NbClust Method
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
upper_range <-  quartile[2]+1.5*iqr
library(NbClust)
# NbClust Method
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
# NbClust Method
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
fviz_nbclust(data.transform, kmeans, method = 'wss')
# Silhouette Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'silhouette')
# Get some metrics about the variables
summary(data)
# using Nbclust  set.seed(26)
clusterNo <- NbClust(data.scaled,distance="euclidean", min.nc=2,max.nc=10,method="kmeans",index="all")
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
# using Nbclust  set.seed(26)
clusterNo <- NbClust(data.scaled,distance="euclidean", min.nc=2,max.nc=10,method="kmeans",index="all")
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
# using Nbclust  set.seed(26)
clusterNo <- NbClust(data.scaled,distance="euclidean", min.nc=2,max.nc=10,method="kmeans",index="all")
# using Nbclust  set.seed(26)
clusterNo <- NbClust(data.clean,distance="euclidean", min.nc=2,max.nc=10,method="kmeans",index="all")
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
#calclulate how many clusters wss
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
# Silhouette Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'silhouette')
set.seed(23)
# Clustering for k = 2
kmeans.2 <- kmeans(data.clean, centers = 2, nstart = 20)
kmeans.2 # Finding WSS
fviz_cluster(kmeans.2, data = data.clean,
palette = c("#636A2B", "#63E5FF", "#E7B800"),
geom = "point",
ellipse.type = "convex",
ggtheme = theme_bw()
)
cm.2 <- table(data.clean$quality, kmeans.2$cluster)
cm.2
qColumn.2<-factor(data.clean$quality)
quality.2<-as.numeric(qColumn.2)
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans_data.2 = kmeans(data.scaled, centers = 2, nstart = 20)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans_data.2 = kmeans(data.clean, centers = 2, nstart = 20)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.clean, centers = 2, nstart = 20)
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.clean, centers = 2, nstart = 20)
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.clean, centers = 2, nstart = 20)
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.normazlized, centers = 2, nstart = 20)
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.normazlized, centers = 2, nstart = 20)
set.seed(23)
# Clustering for k = 2
# performing kmeans with 2 clusters k2 = 2
kmeans.2 = kmeans(data.normalized, centers = 2, nstart = 20)
kmeans.2
fviz_cluster(kmeans.2, data.normalized, geom = c("point"),main = "Cluster plot for k = 2")
data.k_clustered.2 <- as.data.frame(data.clean)
data.k_clustered.2$cluster = as.factor(kmeans.2$cluster)
set.seed(23)
#Analysis for each k attempts
#https://www.datanovia.com/en/blog/k-means-clustering-visualization-in-r-step-by-step-guide/
#for k = 2
kmeansAna <- kmeans(data.normalized, centers = 2, nstart = 20)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
set.seed(23)
#Analysis for each k attempts
#https://www.datanovia.com/en/blog/k-means-clustering-visualization-in-r-step-by-step-guide/
#for k = 2
kmeansAna <- kmeans(data.normalized, centers = 2, nstart = 20)
kmeansAna
kmeansAna$withinss
kmeansAna$totss
kmeansAna$betweenss
fviz_cluster(kmeansAna, data = data.normazlied)
fviz_cluster(kmeansAna, data = data.normalized)
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
#Analysis for each
# Create clusters for k = 2, k = 3 and k = 4
kmeans.2 <- kmeans(data.clean[, 1:11], centers = 2)
kmeans.3 <- kmeans(data.clean[, 1:11], centers = 3)
kmeans.4 <- kmeans(data.clean[, 1:11], centers = 4)
# Show the clusters
clusplot(data.clean, kmeans.2$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
clusplot(data.clean, kmeans.3$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
clusplot(data.clean, kmeans.4$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
# Confusion matrix
table(kmeans.2$cluster, data.clean$quality)
table(kmeans.3$cluster, data.clean$quality)
table(kmeans.4$cluster, data.clean$quality)
kmeans.2$betweenss/kmeans.2$totss * 100
kmeans.3$betweenss/kmeans.3$totss * 100
kmeans.4$betweenss/kmeans.4$totss * 100
data.pca = prcomp(data.clean[1:11], center = TRUE, scale = FALSE)
summary(data.pca)
# Take only the PCs with a cumulative score > 96%
data.transform <- as.data.frame(-data.pca$x[,1:2])
View(data.transform)
kmeans.2_pca <- kmeans(data.transform, centers = 2, nstart = 50)
kmeans.3_pca <- kmeans(data.transform, centers = 3, nstart = 50)
kmeans.4_pca <- kmeans(data.transform, centers = 4, nstart = 50)
fviz_cluster(kmeans.2_pca, data = data.transform, geom = "point")
fviz_cluster(kmeans.3_pca, data = data.transform, geom = "point")
fviz_cluster(kmeans.4_pca, data = data.transform, geom = "point")
table(kmeans.2_pca$cluster, data.clean$quality)
fviz_nbclust(data.transform, kmeans, method = 'silhouette')
library("cluster")
library("NbClust")
library("factoextra")
library("ClusterR")
library("readxl")
#Importing dataset
data <- read_excel("Whitewine.xlsx")
# Get some metrics about the variables
summary(data)
boxplot(data)
oldpar = par(mfrow = c(2,6))
for ( i in 1:11 ) {
boxplot(data[[i]])
mtext(names(data)[i], cex = 0.8, side = 1, line = 2)
}
remove_outliers <- function(name) {
quartile <- quantile(data.clean[,name], probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.clean[,name])
upper_range <-  quartile[2]+1.5*iqr
lower_range <- quartile[1]-1.5*iqr
return(subset(data.clean, data.clean[,name] > lower_range
& data.clean[,name] < upper_range))
}
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# Normalize the data except the quality
data.normalized <- as.data.frame(lapply(data[, 1:11], normalize))
# Add the quality column to the normalized data
data.normalized$quality <- data$quality
# Remove outliers
data.clean <- data.normalized
data.clean <- remove_outliers("fixed.acidity")
data.clean <- remove_outliers("volatile.acidity")
data.clean <- remove_outliers("citric.acid")
data.clean <- remove_outliers("residual.sugar")
data.clean <- remove_outliers("chlorides")
data.clean <- remove_outliers("free.sulfur.dioxide")
data.clean <- remove_outliers("total.sulfur.dioxide")
data.clean <- remove_outliers("density")
data.clean <- remove_outliers("pH")
data.clean <- remove_outliers("sulphates")
data.clean <- remove_outliers("alcohol")
# matrix created with 2 rows and 6 columns
boxplot.panels = par(mfrow = c(2,6))
# visualizing the data after removal of outliers
for (i in 1:11) {
boxplot(data.clean[[i]])
mtext(names(data.clean)[i], cex = 0.8, side = 1, line = 2) }
# NbClust Method
#set.seed(23)
clusters.nb <- NbClust(data = data.clean[1:11], method = "kmeans")
#calclulate how many clusters wss
# Elbow Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'wss')
fviz_nbclust(data.transform, kmeans, method = 'wss')
# Silhouette Method
fviz_nbclust(data.clean[1:11], kmeans, method = 'silhouette')
fviz_nbclust(data.transform, kmeans, method = 'silhouette')
#Analysis for each
# Create clusters for k = 2, k = 3 and k = 4
kmeans.2 <- kmeans(data.clean[, 1:11], centers = 2)
kmeans.3 <- kmeans(data.clean[, 1:11], centers = 3)
kmeans.4 <- kmeans(data.clean[, 1:11], centers = 4)
# Show the clusters
clusplot(data.clean, kmeans.2$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
clusplot(data.clean, kmeans.3$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
clusplot(data.clean, kmeans.4$cluster, main='2D representation of the Cluster', color=TRUE, shade=TRUE)
# Confusion matrix
table(kmeans.2$cluster, data.clean$quality)
table(kmeans.3$cluster, data.clean$quality)
table(kmeans.4$cluster, data.clean$quality)
kmeans.2$betweenss/kmeans.2$totss * 100
kmeans.3$betweenss/kmeans.3$totss * 100
kmeans.4$betweenss/kmeans.4$totss * 100
data.pca = prcomp(data.clean[1:11], center = TRUE, scale = FALSE)
summary(data.pca)
# Take only the PCs with a cumulative score > 96%
data.transform <- as.data.frame(-data.pca$x[,1:2])
kmeans.2_pca <- kmeans(data.transform, centers = 2, nstart = 50)
kmeans.3_pca <- kmeans(data.transform, centers = 3, nstart = 50)
kmeans.4_pca <- kmeans(data.transform, centers = 4, nstart = 50)
fviz_cluster(kmeans.2_pca, data = data.transform, geom = "point")
fviz_cluster(kmeans.3_pca, data = data.transform, geom = "point")
fviz_cluster(kmeans.4_pca, data = data.transform, geom = "point")
table(kmeans.2_pca$cluster, data.clean$quality)
